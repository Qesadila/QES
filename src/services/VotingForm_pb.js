// source: VotingForm.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.Response', null, global);
goog.exportSymbol('proto.Response.Created', null, global);
goog.exportSymbol('proto.VotingForm', null, global);
goog.exportSymbol('proto.VotingFormItem', null, global);
goog.exportSymbol('proto.VotingFormItemOption', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.VotingForm = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.VotingForm.repeatedFields_, null);
};
goog.inherits(proto.VotingForm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.VotingForm.displayName = 'proto.VotingForm';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.VotingFormItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.VotingFormItem.repeatedFields_, null);
};
goog.inherits(proto.VotingFormItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.VotingFormItem.displayName = 'proto.VotingFormItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.VotingFormItemOption = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.VotingFormItemOption, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.VotingFormItemOption.displayName = 'proto.VotingFormItemOption';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Response.displayName = 'proto.Response';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.VotingForm.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.VotingForm.prototype.toObject = function(opt_includeInstance) {
  return proto.VotingForm.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.VotingForm} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VotingForm.toObject = function(includeInstance, msg) {
  var f, obj = {
    openfrom: jspb.Message.getFieldWithDefault(msg, 1, ""),
    openuntil: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    voterlistid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    formsList: jspb.Message.toObjectList(msg.getFormsList(),
    proto.VotingFormItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.VotingForm}
 */
proto.VotingForm.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.VotingForm;
  return proto.VotingForm.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.VotingForm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.VotingForm}
 */
proto.VotingForm.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpenfrom(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpenuntil(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVoterlistid(value);
      break;
    case 5:
      var value = new proto.VotingFormItem;
      reader.readMessage(value,proto.VotingFormItem.deserializeBinaryFromReader);
      msg.addForms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.VotingForm.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.VotingForm.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.VotingForm} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VotingForm.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpenfrom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOpenuntil();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getVoterlistid();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getFormsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.VotingFormItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional string openFrom = 1;
 * @return {string}
 */
proto.VotingForm.prototype.getOpenfrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.VotingForm} returns this
 */
proto.VotingForm.prototype.setOpenfrom = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string openUntil = 2;
 * @return {string}
 */
proto.VotingForm.prototype.getOpenuntil = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.VotingForm} returns this
 */
proto.VotingForm.prototype.setOpenuntil = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.VotingForm.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.VotingForm} returns this
 */
proto.VotingForm.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 voterListID = 4;
 * @return {number}
 */
proto.VotingForm.prototype.getVoterlistid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.VotingForm} returns this
 */
proto.VotingForm.prototype.setVoterlistid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated VotingFormItem forms = 5;
 * @return {!Array<!proto.VotingFormItem>}
 */
proto.VotingForm.prototype.getFormsList = function() {
  return /** @type{!Array<!proto.VotingFormItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.VotingFormItem, 5));
};


/**
 * @param {!Array<!proto.VotingFormItem>} value
 * @return {!proto.VotingForm} returns this
*/
proto.VotingForm.prototype.setFormsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.VotingFormItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.VotingFormItem}
 */
proto.VotingForm.prototype.addForms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.VotingFormItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.VotingForm} returns this
 */
proto.VotingForm.prototype.clearFormsList = function() {
  return this.setFormsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.VotingFormItem.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.VotingFormItem.prototype.toObject = function(opt_includeInstance) {
  return proto.VotingFormItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.VotingFormItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VotingFormItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    question: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ismandatory: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    ispublic: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    numberofpositiveanswers: jspb.Message.getFieldWithDefault(msg, 4, 0),
    numberofnegativeanswer: jspb.Message.getFieldWithDefault(msg, 5, 0),
    answersList: jspb.Message.toObjectList(msg.getAnswersList(),
    proto.VotingFormItemOption.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.VotingFormItem}
 */
proto.VotingFormItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.VotingFormItem;
  return proto.VotingFormItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.VotingFormItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.VotingFormItem}
 */
proto.VotingFormItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsmandatory(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIspublic(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumberofpositiveanswers(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumberofnegativeanswer(value);
      break;
    case 6:
      var value = new proto.VotingFormItemOption;
      reader.readMessage(value,proto.VotingFormItemOption.deserializeBinaryFromReader);
      msg.addAnswers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.VotingFormItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.VotingFormItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.VotingFormItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VotingFormItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsmandatory();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getIspublic();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getNumberofpositiveanswers();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getNumberofnegativeanswer();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getAnswersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.VotingFormItemOption.serializeBinaryToWriter
    );
  }
};


/**
 * optional string question = 1;
 * @return {string}
 */
proto.VotingFormItem.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.VotingFormItem} returns this
 */
proto.VotingFormItem.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool isMandatory = 2;
 * @return {boolean}
 */
proto.VotingFormItem.prototype.getIsmandatory = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.VotingFormItem} returns this
 */
proto.VotingFormItem.prototype.setIsmandatory = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool isPublic = 3;
 * @return {boolean}
 */
proto.VotingFormItem.prototype.getIspublic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.VotingFormItem} returns this
 */
proto.VotingFormItem.prototype.setIspublic = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional uint32 numberOfPositiveAnswers = 4;
 * @return {number}
 */
proto.VotingFormItem.prototype.getNumberofpositiveanswers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.VotingFormItem} returns this
 */
proto.VotingFormItem.prototype.setNumberofpositiveanswers = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 numberOfNegativeAnswer = 5;
 * @return {number}
 */
proto.VotingFormItem.prototype.getNumberofnegativeanswer = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.VotingFormItem} returns this
 */
proto.VotingFormItem.prototype.setNumberofnegativeanswer = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * repeated VotingFormItemOption answers = 6;
 * @return {!Array<!proto.VotingFormItemOption>}
 */
proto.VotingFormItem.prototype.getAnswersList = function() {
  return /** @type{!Array<!proto.VotingFormItemOption>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.VotingFormItemOption, 6));
};


/**
 * @param {!Array<!proto.VotingFormItemOption>} value
 * @return {!proto.VotingFormItem} returns this
*/
proto.VotingFormItem.prototype.setAnswersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.VotingFormItemOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.VotingFormItemOption}
 */
proto.VotingFormItem.prototype.addAnswers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.VotingFormItemOption, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.VotingFormItem} returns this
 */
proto.VotingFormItem.prototype.clearAnswersList = function() {
  return this.setAnswersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.VotingFormItemOption.prototype.toObject = function(opt_includeInstance) {
  return proto.VotingFormItemOption.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.VotingFormItemOption} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VotingFormItemOption.toObject = function(includeInstance, msg) {
  var f, obj = {
    option: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.VotingFormItemOption}
 */
proto.VotingFormItemOption.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.VotingFormItemOption;
  return proto.VotingFormItemOption.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.VotingFormItemOption} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.VotingFormItemOption}
 */
proto.VotingFormItemOption.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOption(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.VotingFormItemOption.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.VotingFormItemOption.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.VotingFormItemOption} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VotingFormItemOption.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOption();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string option = 1;
 * @return {string}
 */
proto.VotingFormItemOption.prototype.getOption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.VotingFormItemOption} returns this
 */
proto.VotingFormItemOption.prototype.setOption = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    created: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Response}
 */
proto.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Response;
  return proto.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Response}
 */
proto.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.Response.Created} */ (reader.readEnum());
      msg.setCreated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreated();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.Response.Created = {
  OK: 0,
  FAIL: 1
};

/**
 * optional Created created = 1;
 * @return {!proto.Response.Created}
 */
proto.Response.prototype.getCreated = function() {
  return /** @type {!proto.Response.Created} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.Response.Created} value
 * @return {!proto.Response} returns this
 */
proto.Response.prototype.setCreated = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


goog.object.extend(exports, proto);
